{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { startLoading, finishLoading } from '../../store/actions/loading';\nimport * as actionTypes from '../../store/actions/actionTypes';\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`; // eslint-disable-next-line func-names\n\n  return function* (action) {\n    let err = null;\n    let response = null;\n    yield put(startLoading(type));\n\n    switch (type) {\n      case actionTypes.GETMEETINGS:\n        yield axios.get(request).then(res => {\n          response = res.data;\n        }).catch(error => {\n          err = error;\n        });\n\n        if (!err) {\n          yield put({\n            type: SUCCESS,\n            payload: response\n          });\n        } else {\n          yield put({\n            type: FAILURE,\n            payload: {\n              error: err\n            }\n          });\n        }\n\n        break;\n\n      case actionTypes.CREATEMEETING:\n        yield axios.post(request, {\n          title: action.payload.title,\n          content: action.payload.content,\n          authorId: action.payload.authorId\n        }).then(res => {\n          response = res.data;\n        }).catch(error => {\n          err = error;\n        });\n\n        if (!err) {\n          yield put({\n            type: SUCCESS,\n            payload: response\n          });\n        } else {\n          yield put({\n            type: FAILURE,\n            payload: {\n              error: err\n            }\n          });\n        }\n\n        break;\n\n      case actionTypes.EDITMEETING:\n        yield axios.put(`${request}/${action.payload.meetingId}`, {\n          title: action.payload.newTitle,\n          content: action.payload.newContent,\n          authorId: action.payload.authorId\n        }).then(res => {\n          response = res.data;\n        }).catch(error => {\n          err = error;\n        });\n\n        if (!err) {\n          yield put({\n            type: SUCCESS,\n            payload: response\n          });\n        } else {\n          yield put({\n            type: FAILURE,\n            payload: {\n              error: err\n            }\n          });\n        }\n\n        break;\n\n      case actionTypes.DELETEMEETING:\n        yield axios.delete(`${request}/${action.payload.id}`).then(res => {\n          response = res;\n        }).catch(error => {\n          err = error;\n        });\n\n        if (!err) {\n          yield put({\n            type: SUCCESS,\n            payload: action.payload.id\n          });\n        } else {\n          yield put({\n            type: FAILURE,\n            payload: {\n              error: err\n            }\n          });\n        }\n\n        break;\n      // TODO\n      // case actionTypes.JOINMEETING:\n      //   yield axios;\n      //   break;\n      // TODO\n      // case actionTypes.QUITMEETING:\n      //   yield axios;\n      //   break;\n\n      default:\n        break;\n    }\n\n    yield put(finishLoading(type));\n  };\n}","map":{"version":3,"sources":["/home/chaseungbin/swpp2021-team12/frontend/src/components/meeting/createRequestSaga.js"],"names":["put","axios","startLoading","finishLoading","actionTypes","createRequestSaga","type","request","SUCCESS","FAILURE","action","err","response","GETMEETINGS","get","then","res","data","catch","error","payload","CREATEMEETING","post","title","content","authorId","EDITMEETING","meetingId","newTitle","newContent","DELETEMEETING","delete","id"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,6BAA5C;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AAEA,eAAe,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,OAAjC,EAA0C;AACvD,QAAMC,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,OAAO,GAAI,GAAEH,IAAK,UAAxB,CAFuD,CAIvD;;AACA,SAAO,WAAWI,MAAX,EAAmB;AACxB,QAAIC,GAAG,GAAG,IAAV;AACA,QAAIC,QAAQ,GAAG,IAAf;AACA,UAAMZ,GAAG,CAACE,YAAY,CAACI,IAAD,CAAb,CAAT;;AAEA,YAAQA,IAAR;AACE,WAAKF,WAAW,CAACS,WAAjB;AACE,cAAMZ,KAAK,CACRa,GADG,CACCP,OADD,EAEHQ,IAFG,CAEGC,GAAD,IAAS;AACbJ,UAAAA,QAAQ,GAAGI,GAAG,CAACC,IAAf;AACD,SAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChBR,UAAAA,GAAG,GAAGQ,KAAN;AACD,SAPG,CAAN;;AASA,YAAI,CAACR,GAAL,EAAU;AACR,gBAAMX,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEE,OAAR;AAAiBY,YAAAA,OAAO,EAAER;AAA1B,WAAD,CAAT;AACD,SAFD,MAEO;AACL,gBAAMZ,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEG,OAAR;AAAiBW,YAAAA,OAAO,EAAE;AAAED,cAAAA,KAAK,EAAER;AAAT;AAA1B,WAAD,CAAT;AACD;;AACD;;AAEF,WAAKP,WAAW,CAACiB,aAAjB;AACE,cAAMpB,KAAK,CACRqB,IADG,CACEf,OADF,EACW;AACbgB,UAAAA,KAAK,EAAEb,MAAM,CAACU,OAAP,CAAeG,KADT;AAEbC,UAAAA,OAAO,EAAEd,MAAM,CAACU,OAAP,CAAeI,OAFX;AAGbC,UAAAA,QAAQ,EAAEf,MAAM,CAACU,OAAP,CAAeK;AAHZ,SADX,EAMHV,IANG,CAMGC,GAAD,IAAS;AACbJ,UAAAA,QAAQ,GAAGI,GAAG,CAACC,IAAf;AACD,SARG,EASHC,KATG,CASIC,KAAD,IAAW;AAChBR,UAAAA,GAAG,GAAGQ,KAAN;AACD,SAXG,CAAN;;AAYA,YAAI,CAACR,GAAL,EAAU;AACR,gBAAMX,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEE,OAAR;AAAiBY,YAAAA,OAAO,EAAER;AAA1B,WAAD,CAAT;AACD,SAFD,MAEO;AACL,gBAAMZ,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEG,OAAR;AAAiBW,YAAAA,OAAO,EAAE;AAAED,cAAAA,KAAK,EAAER;AAAT;AAA1B,WAAD,CAAT;AACD;;AACD;;AAEF,WAAKP,WAAW,CAACsB,WAAjB;AACE,cAAMzB,KAAK,CACRD,GADG,CACE,GAAEO,OAAQ,IAAGG,MAAM,CAACU,OAAP,CAAeO,SAAU,EADxC,EAC2C;AAC7CJ,UAAAA,KAAK,EAAEb,MAAM,CAACU,OAAP,CAAeQ,QADuB;AAE7CJ,UAAAA,OAAO,EAAEd,MAAM,CAACU,OAAP,CAAeS,UAFqB;AAG7CJ,UAAAA,QAAQ,EAAEf,MAAM,CAACU,OAAP,CAAeK;AAHoB,SAD3C,EAMHV,IANG,CAMGC,GAAD,IAAS;AACbJ,UAAAA,QAAQ,GAAGI,GAAG,CAACC,IAAf;AACD,SARG,EASHC,KATG,CASIC,KAAD,IAAW;AAChBR,UAAAA,GAAG,GAAGQ,KAAN;AACD,SAXG,CAAN;;AAYA,YAAI,CAACR,GAAL,EAAU;AACR,gBAAMX,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEE,OAAR;AAAiBY,YAAAA,OAAO,EAAER;AAA1B,WAAD,CAAT;AACD,SAFD,MAEO;AACL,gBAAMZ,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEG,OAAR;AAAiBW,YAAAA,OAAO,EAAE;AAAED,cAAAA,KAAK,EAAER;AAAT;AAA1B,WAAD,CAAT;AACD;;AACD;;AAEF,WAAKP,WAAW,CAAC0B,aAAjB;AACE,cAAM7B,KAAK,CACR8B,MADG,CACK,GAAExB,OAAQ,IAAGG,MAAM,CAACU,OAAP,CAAeY,EAAG,EADpC,EAEHjB,IAFG,CAEGC,GAAD,IAAS;AACbJ,UAAAA,QAAQ,GAAGI,GAAX;AACD,SAJG,EAKHE,KALG,CAKIC,KAAD,IAAW;AAChBR,UAAAA,GAAG,GAAGQ,KAAN;AACD,SAPG,CAAN;;AAQA,YAAI,CAACR,GAAL,EAAU;AACR,gBAAMX,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEE,OAAR;AAAiBY,YAAAA,OAAO,EAAEV,MAAM,CAACU,OAAP,CAAeY;AAAzC,WAAD,CAAT;AACD,SAFD,MAEO;AACL,gBAAMhC,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEG,OAAR;AAAiBW,YAAAA,OAAO,EAAE;AAAED,cAAAA,KAAK,EAAER;AAAT;AAA1B,WAAD,CAAT;AACD;;AACD;AAEF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACE;AArFJ;;AAwFA,UAAMX,GAAG,CAACG,aAAa,CAACG,IAAD,CAAd,CAAT;AACD,GA9FD;AA+FD","sourcesContent":["import { put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { startLoading, finishLoading } from '../../store/actions/loading';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  // eslint-disable-next-line func-names\n  return function* (action) {\n    let err = null;\n    let response = null;\n    yield put(startLoading(type));\n\n    switch (type) {\n      case actionTypes.GETMEETINGS:\n        yield axios\n          .get(request)\n          .then((res) => {\n            response = res.data;\n          })\n          .catch((error) => {\n            err = error;\n          });\n\n        if (!err) {\n          yield put({ type: SUCCESS, payload: response });\n        } else {\n          yield put({ type: FAILURE, payload: { error: err } });\n        }\n        break;\n\n      case actionTypes.CREATEMEETING:\n        yield axios\n          .post(request, {\n            title: action.payload.title,\n            content: action.payload.content,\n            authorId: action.payload.authorId,\n          })\n          .then((res) => {\n            response = res.data;\n          })\n          .catch((error) => {\n            err = error;\n          });\n        if (!err) {\n          yield put({ type: SUCCESS, payload: response });\n        } else {\n          yield put({ type: FAILURE, payload: { error: err } });\n        }\n        break;\n\n      case actionTypes.EDITMEETING:\n        yield axios\n          .put(`${request}/${action.payload.meetingId}`, {\n            title: action.payload.newTitle,\n            content: action.payload.newContent,\n            authorId: action.payload.authorId,\n          })\n          .then((res) => {\n            response = res.data;\n          })\n          .catch((error) => {\n            err = error;\n          });\n        if (!err) {\n          yield put({ type: SUCCESS, payload: response });\n        } else {\n          yield put({ type: FAILURE, payload: { error: err } });\n        }\n        break;\n\n      case actionTypes.DELETEMEETING:\n        yield axios\n          .delete(`${request}/${action.payload.id}`)\n          .then((res) => {\n            response = res;\n          })\n          .catch((error) => {\n            err = error;\n          });\n        if (!err) {\n          yield put({ type: SUCCESS, payload: action.payload.id });\n        } else {\n          yield put({ type: FAILURE, payload: { error: err } });\n        }\n        break;\n\n      // TODO\n      // case actionTypes.JOINMEETING:\n      //   yield axios;\n      //   break;\n\n      // TODO\n      // case actionTypes.QUITMEETING:\n      //   yield axios;\n      //   break;\n\n      default:\n        break;\n    }\n\n    yield put(finishLoading(type));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}