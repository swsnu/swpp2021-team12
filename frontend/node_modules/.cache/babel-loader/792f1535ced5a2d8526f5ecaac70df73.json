{"ast":null,"code":"var _jsxFileName = \"/home/chaseungbin/swpp2021-team12/frontend/src/components/meeting/MeetingList/MeetingList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Grid, List, Modal } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Meeting({\n  meeting\n}, history) {\n  return /*#__PURE__*/_jsxDEV(List, {\n    divided: true,\n    relaxed: true,\n    children: /*#__PURE__*/_jsxDEV(List.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"meetingName\",\n        onClick: () => history.push(`/meeting/${meeting.id}`),\n        children: meeting.MeetingName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Meeting;\n\nfunction MeetingList(props) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [location, setLocation] = useState(false);\n  const [time, setTime] = useState(false);\n  const [tag, setTag] = useState(false);\n  const {\n    history,\n    meetinglist\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      celled: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        stretched: true,\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Modal, {\n            className: \"modal\",\n            onOpen: () => setOpen(true),\n            open: open,\n            trigger: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"filterButton\",\n              onClick: () => {\n                setLocation(true);\n                setTime(false);\n                setTag(false);\n              },\n              children: \"Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              children: \"Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"location\",\n                onClick: () => {\n                  setLocation(true);\n                  setTime(false);\n                  setTag(false);\n                },\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"time\",\n                onClick: () => {\n                  setLocation(false);\n                  setTime(true);\n                  setTag(false);\n                },\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"tag\",\n                onClick: () => {\n                  setLocation(false);\n                  setTime(false);\n                  setTag(true);\n                },\n                children: \"#Tag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n              children: [location === true && /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Should contain Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 39\n              }, this), time === true && /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Should contain Calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 35\n              }, this), tag === true && /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Should contain list of tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"back\",\n                onClick: () => setOpen(false),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"confirm\",\n                content: \"Confirm\",\n                labelPosition: \"right\",\n                icon: \"checkmark\",\n                onClick: () => setOpen(false),\n                positive: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), meetinglist && meetinglist.map(meeting => /*#__PURE__*/_jsxDEV(Meeting, {\n            meeting: meeting\n          }, meeting.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"You are full of bullshit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"BackButton\",\n      onClick: () => history.push('/main'),\n      children: \"back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeetingList, \"8hYZQg8cesF10Qtjizi/CSVQNoU=\");\n\n_c2 = MeetingList;\nexport default _c3 = withRouter(MeetingList);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Meeting\");\n$RefreshReg$(_c2, \"MeetingList\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/home/chaseungbin/swpp2021-team12/frontend/src/components/meeting/MeetingList/MeetingList.js"],"names":["React","useState","Button","Grid","List","Modal","withRouter","Meeting","meeting","history","push","id","MeetingName","MeetingList","props","open","setOpen","location","setLocation","time","setTime","tag","setTag","meetinglist","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,mBAA1C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8BC,OAA9B,EAAuC;AACrC,sBACE,QAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,OAAO,MAArB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAE,MAAMA,OAAO,CAACC,IAAR,CAAc,YAAWF,OAAO,CAACG,EAAG,EAApC,CAFjB;AAAA,kBAIGH,OAAO,CAACI;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAbQL,O;;AAeT,SAASM,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACoB,GAAD,EAAMC,MAAN,IAAgBrB,QAAQ,CAAC,KAAD,CAA9B;AAEA,QAAM;AAAEQ,IAAAA,OAAF;AAAWc,IAAAA;AAAX,MAA2BT,KAAjC;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAA,6BACE,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,SAAS,MAAnB;AAAA,+BACE,QAAC,IAAD,CAAM,MAAN;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,SAAS,EAAC,OADZ;AAEE,YAAA,MAAM,EAAE,MAAME,OAAO,CAAC,IAAD,CAFvB;AAGE,YAAA,IAAI,EAAED,IAHR;AAIE,YAAA,OAAO,eACL,QAAC,MAAD;AACE,cAAA,SAAS,EAAC,cADZ;AAEE,cAAA,OAAO,EAAE,MAAM;AACbG,gBAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,gBAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,gBAAAA,MAAM,CAAC,KAAD,CAAN;AACD,eANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA,oCAiBE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,eAkBE,QAAC,KAAD,CAAO,WAAP;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,SAAS,EAAC,UADZ;AAEE,gBAAA,OAAO,EAAE,MAAM;AACbJ,kBAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,kBAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,kBAAAA,MAAM,CAAC,KAAD,CAAN;AACD,iBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE,QAAC,MAAD;AACE,gBAAA,SAAS,EAAC,MADZ;AAEE,gBAAA,OAAO,EAAE,MAAM;AACbJ,kBAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,kBAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,kBAAAA,MAAM,CAAC,KAAD,CAAN;AACD,iBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAqBE,QAAC,MAAD;AACE,gBAAA,SAAS,EAAC,KADZ;AAEE,gBAAA,OAAO,EAAE,MAAM;AACbJ,kBAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,kBAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,kBAAAA,MAAM,CAAC,IAAD,CAAN;AACD,iBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAkDE,QAAC,KAAD,CAAO,WAAP;AAAA,yBACGL,QAAQ,KAAK,IAAb,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADxB,EAEGE,IAAI,KAAK,IAAT,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFpB,EAGGE,GAAG,KAAK,IAAR,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlDF,eAuDE,QAAC,KAAD,CAAO,OAAP;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,MAAlB;AAAyB,gBAAA,OAAO,EAAE,MAAML,OAAO,CAAC,KAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,MAAD;AACE,gBAAA,SAAS,EAAC,SADZ;AAEE,gBAAA,OAAO,EAAC,SAFV;AAGE,gBAAA,aAAa,EAAC,OAHhB;AAIE,gBAAA,IAAI,EAAC,WAJP;AAKE,gBAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CALxB;AAME,gBAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvDF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAuEGO,WAAW,IACVA,WAAW,CAACC,GAAZ,CAAiBhB,OAAD,iBACd,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEA;AAAlB,aAAgCA,OAAO,CAACG,EAAxC;AAAA;AAAA;AAAA;AAAA,kBADF,CAxEJ,eA2EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAmFE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACC,IAAR,CAAa,OAAb,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyFD;;GAjGQG,W;;MAAAA,W;AAmGT,qBAAeP,UAAU,CAACO,WAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Grid, List, Modal } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\n\nfunction Meeting({ meeting }, history) {\n  return (\n    <List divided relaxed>\n      <List.Item>\n        <Button\n          className=\"meetingName\"\n          onClick={() => history.push(`/meeting/${meeting.id}`)}\n        >\n          {meeting.MeetingName}\n        </Button>\n      </List.Item>\n    </List>\n  );\n}\n\nfunction MeetingList(props) {\n  const [open, setOpen] = useState(false);\n  const [location, setLocation] = useState(false);\n  const [time, setTime] = useState(false);\n  const [tag, setTag] = useState(false);\n\n  const { history, meetinglist } = props;\n\n  return (\n    <div>\n      <Grid celled>\n        <Grid.Row stretched>\n          <Grid.Column>\n            <Modal\n              className=\"modal\"\n              onOpen={() => setOpen(true)}\n              open={open}\n              trigger={\n                <Button\n                  className=\"filterButton\"\n                  onClick={() => {\n                    setLocation(true);\n                    setTime(false);\n                    setTag(false);\n                  }}\n                >\n                  Filter\n                </Button>\n              }\n            >\n              <Modal.Header>Filter</Modal.Header>\n              <Modal.Description>\n                <Button\n                  className=\"location\"\n                  onClick={() => {\n                    setLocation(true);\n                    setTime(false);\n                    setTag(false);\n                  }}\n                >\n                  Location\n                </Button>\n                <Button\n                  className=\"time\"\n                  onClick={() => {\n                    setLocation(false);\n                    setTime(true);\n                    setTag(false);\n                  }}\n                >\n                  Time\n                </Button>\n                <Button\n                  className=\"tag\"\n                  onClick={() => {\n                    setLocation(false);\n                    setTime(false);\n                    setTag(true);\n                  }}\n                >\n                  #Tag\n                </Button>\n              </Modal.Description>\n              <Modal.Description>\n                {location === true && <h1>Should contain Map</h1>}\n                {time === true && <h1>Should contain Calendar</h1>}\n                {tag === true && <h1>Should contain list of tags</h1>}\n              </Modal.Description>\n              <Modal.Actions>\n                <Button className=\"back\" onClick={() => setOpen(false)}>\n                  Back\n                </Button>\n                <Button\n                  className=\"confirm\"\n                  content=\"Confirm\"\n                  labelPosition=\"right\"\n                  icon=\"checkmark\"\n                  onClick={() => setOpen(false)}\n                  positive\n                />\n              </Modal.Actions>\n            </Modal>\n\n            {meetinglist &&\n              meetinglist.map((meeting) => (\n                <Meeting meeting={meeting} key={meeting.id} />\n              ))}\n            <h1>You are full of bullshit</h1>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Button className=\"BackButton\" onClick={() => history.push('/main')}>\n        back\n      </Button>\n    </div>\n  );\n}\n\nexport default withRouter(MeetingList);\n"]},"metadata":{},"sourceType":"module"}