{"ast":null,"code":"var _jsxFileName = \"/home/chaseungbin/swpp2021-team12/frontend/src/components/auth/SignUp/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUp(props) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkPassword, setCheckPassword] = useState('');\n  const [isValidEmail, setIsValidEmail] = useState(false);\n  const [isValidName, setIsValidName] = useState(true);\n  const [isValidPassword, setIsValidPassword] = useState(true);\n  const {\n    onClickConfirmButton,\n    history\n  } = props;\n\n  const onClickSignInButton = () => history.push('/sign_in');\n\n  const mailReg = /^[^@\\s]+@[^@.\\s]+.[a-zA-Z]{2,3}$/;\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    placeholder: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      relaxed: \"very\",\n      stackable: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          id: \"form_signup\",\n          onSubmit: () => {\n            onClickConfirmButton(email, name, password);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            id: \"input_email\",\n            icon: \"mail\",\n            iconPosition: \"left\",\n            label: \"Email\",\n            placeholder: \"Email\",\n            error: !isValidEmail && email ? {\n              content: 'Please enter a valid email form',\n              pointing: 'below'\n            } : null,\n            onChange: e => {\n              setEmail(e.target.value);\n\n              if (mailReg.test(e.target.value)) {\n                setIsValidEmail(true);\n              } else {\n                setIsValidEmail(false);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            id: \"input_name\",\n            icon: \"lock\",\n            iconPosition: \"left\",\n            label: \"Name\",\n            placeholder: \"Name\",\n            error: !isValidName && name ? {\n              content: 'Please enter your name',\n              pointing: 'below'\n            } : null,\n            onChange: e => {\n              setName(e.target.value);\n\n              if (e.target.value && e.target.value.length >= 3) {\n                setIsValidName(true);\n              } else {\n                setIsValidName(false);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            id: \"input_password\",\n            icon: \"mail\",\n            iconPosition: \"left\",\n            label: \"Password\",\n            placeholder: \"Password\",\n            type: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            id: \"input_passwordCheck\",\n            icon: \"lock\",\n            iconPosition: \"left\",\n            label: \"PasswordCheck\",\n            placeholder: \"PasswordCheck\",\n            type: \"password\",\n            error: !isValidPassword && checkPassword ? {\n              content: \"PasswordCheck doesn't match with Password\",\n              pointing: 'below'\n            } : null,\n            onChange: e => {\n              setCheckPassword(e.target.value);\n\n              if (password && password === e.target.value && e.target.value.length >= 6) {\n                setIsValidPassword(true);\n              } else {\n                setIsValidPassword(false);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"button_confirm\",\n            content: \"Confirm\",\n            disabled: !isValidEmail || !isValidName || !isValidPassword,\n            primary: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"button_signin\",\n            content: \"Sign In\",\n            onClick: onClickSignInButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"ejok/x9sRiDkKvPskuPhkycZMco=\");\n\n_c = SignUp;\nexport default _c2 = withRouter(SignUp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/chaseungbin/swpp2021-team12/frontend/src/components/auth/SignUp/SignUp.js"],"names":["React","useState","Button","Form","Grid","Segment","withRouter","SignUp","props","email","setEmail","name","setName","password","setPassword","checkPassword","setCheckPassword","isValidEmail","setIsValidEmail","isValidName","setIsValidName","isValidPassword","setIsValidPassword","onClickConfirmButton","history","onClickSignInButton","push","mailReg","content","pointing","e","target","value","test","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\n\nfunction SignUp(props) {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkPassword, setCheckPassword] = useState('');\n  const [isValidEmail, setIsValidEmail] = useState(false);\n  const [isValidName, setIsValidName] = useState(true);\n  const [isValidPassword, setIsValidPassword] = useState(true);\n  const { onClickConfirmButton, history } = props;\n  const onClickSignInButton = () => history.push('/sign_in');\n  const mailReg = /^[^@\\s]+@[^@.\\s]+.[a-zA-Z]{2,3}$/;\n\n  return (\n    <Segment placeholder>\n      <Grid relaxed=\"very\" stackable>\n        <Grid.Column>\n          <Form\n            id=\"form_signup\"\n            onSubmit={() => {\n              onClickConfirmButton(email, name, password);\n            }}\n          >\n            <Form.Input\n              id=\"input_email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              error={\n                !isValidEmail && email\n                  ? {\n                      content: 'Please enter a valid email form',\n                      pointing: 'below',\n                    }\n                  : null\n              }\n              onChange={(e) => {\n                setEmail(e.target.value);\n                if (mailReg.test(e.target.value)) {\n                  setIsValidEmail(true);\n                } else {\n                  setIsValidEmail(false);\n                }\n              }}\n            />\n            <Form.Input\n              id=\"input_name\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Name\"\n              placeholder=\"Name\"\n              error={\n                !isValidName && name\n                  ? { content: 'Please enter your name', pointing: 'below' }\n                  : null\n              }\n              onChange={(e) => {\n                setName(e.target.value);\n                if (e.target.value && e.target.value.length >= 3) {\n                  setIsValidName(true);\n                } else {\n                  setIsValidName(false);\n                }\n              }}\n            />\n            <Form.Input\n              id=\"input_password\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Form.Input\n              id=\"input_passwordCheck\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"PasswordCheck\"\n              placeholder=\"PasswordCheck\"\n              type=\"password\"\n              error={\n                !isValidPassword && checkPassword\n                  ? {\n                      content: \"PasswordCheck doesn't match with Password\",\n                      pointing: 'below',\n                    }\n                  : null\n              }\n              onChange={(e) => {\n                setCheckPassword(e.target.value);\n                if (\n                  password &&\n                  password === e.target.value &&\n                  e.target.value.length >= 6\n                ) {\n                  setIsValidPassword(true);\n                } else {\n                  setIsValidPassword(false);\n                }\n              }}\n            />\n\n            <Button\n              id=\"button_confirm\"\n              content=\"Confirm\"\n              disabled={!isValidEmail || !isValidName || !isValidPassword}\n              primary\n            />\n            <Button\n              id=\"button_signin\"\n              content=\"Sign In\"\n              onClick={onClickSignInButton}\n            />\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\n\nexport default withRouter(SignUp);\n"]},"metadata":{},"sourceType":"module"}